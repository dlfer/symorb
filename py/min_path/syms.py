r"""
Database and Interface with the symfiles generated by GAP-SYMORB
Davide L. Ferrario <ferrario@matapp.unimib.it>
"""

# _DATA_DIR='/usr/local/gap4r2/pkg/symorb/syms'
from .myconf import _DATA_DIR

import sys
# sys.path=sys.path+['/home/ferrario/local/symorb/py']
from min_path.mod_minpath import *
import pickle
import readline
import os
import time
import string
import re

# begin _HERE_
true = True
false = False


def parse_attributes(data):
    data_lines = string.split(data, "\n")
    data_dic = {}
    for line in data_lines:
        if re.match("^@ ", line):
            line = re.sub("^@ | ", "", line)
            tokens = string.split(line, ":")
            if len(tokens) == 2:
                data_dic[tokens[0]] = eval(tokens[1])
            else:
                sys.stderr.write("error: line <%s> wrong" % line)
    data_dic['TDSizes'] = TDComp(data_dic['TransitiveDecomposition'])
    return data_dic


def TDComp(lista):
    res = []
    for i in lista:
        res = res + [len(i)]
    res.sort()
    return res


def compare_dics(data_dic, user_dic):
    for key in list(user_dic.keys()):
        if (not user_dic[key] == data_dic[key]):
            return false
    return true

# def all_minpathsSRC(my_dir, GroupOrder='', KernelTauOrder='', ActionType='', IsTypeR='', IsCoercive='', IsRedundant='', HasAlwaysCollisions='', TDSizes=''):


def all_minpaths(dim=2, NOB=3, **my_args):
    if dim == 2 and NOB == 3:
        my_dir = _DATA_DIR+'/n3d2'  # __HERE__ todo
    elif dim == 3 and NOB == 3:
        my_dir = _DATA_DIR+'/n3d3'  # __HERE__ todo
    else:
        sys.stderr.write("not yet\n")
        return
    all_sym_files = os.listdir(my_dir)
    result = []
    user_dic = my_args
    for file in all_sym_files:
        tokens = os.path.splitext(file)
        if tokens[1] == '.sym':
            info_file = my_dir + '/' + tokens[0] + '.info'
            this_symfile = my_dir + '/' + tokens[0] + '.sym'
        # try:
            fd = open(info_file, 'r')
            info_data = fd.read()
            fd.close()
            data_dic = parse_attributes(info_data)
            if compare_dics(data_dic, user_dic):
                result = result + [minpath(this_symfile)]
        # except:
        #      sys.stderr.write("warning file %s bad\n" % info_file )
    # sys.stdout.write("%i minpaths found...\n" % len(result))
    return result

# now some common names (classification)


eight_c6 = minpath(_DATA_DIR+'/n3d2/all_0n3d2_8.sym')
eight_d6 = minpath(_DATA_DIR+'/n3d2/all_1n3d2_48.sym')
eight_d12 = minpath(_DATA_DIR+'/n3d2/all_1n3d2_43.sym')
trivial = minpath(_DATA_DIR+'/n3d2/all_0n3d2_3.sym')
line = minpath(_DATA_DIR+'/n3d2/all_1n3d2_9.sym')
isosceles = minpath(_DATA_DIR+'/n3d2/all_1n3d2_19.sym')
hill = minpath(_DATA_DIR+'/n3d2/all_1n3d2_29.sym')
choreography = minpath(_DATA_DIR+'/n3d2/all_0n3d2_9.sym')
lagrange = minpath(_DATA_DIR+'/n3d2/all_1n3d2_49.sym')
choreography_21 = minpath(_DATA_DIR+'/n3d2/all_0n3d2_6.sym')
